diff --git a/aclocal.m4 b/acinclude.m4
similarity index 98%
rename from aclocal.m4
rename to acinclude.m4
index e91be3c0d..26e0ae228 100644
--- a/aclocal.m4
+++ b/acinclude.m4
@@ -52,7 +52,7 @@ case "x$fp_cv_prog_cc_stdc" in
 esac
 ])
 
-AC_DEFUN(AC_PROG_LN,
+AC_DEFUN([AC_PROG_LN],
 [AC_MSG_CHECKING(whether ln works)
 AC_CACHE_VAL(ac_cv_prog_LN,
 [rm -f conftestdata conftestlink
@@ -64,14 +64,14 @@ then
 else
   rm -f conftestdata
   ac_cv_prog_LN="cp"
-fi])dnl
+fi])
 LN="$ac_cv_prog_LN"
 if test "$ac_cv_prog_LN" = "ln"; then
   AC_MSG_RESULT(yes)
 else
   AC_MSG_RESULT(no)
 fi
-AC_SUBST(LN)dnl
+AC_SUBST(LN)
 ])
 
 builtin(include, aczsh.m4)
diff --git a/aczsh.m4 b/aczsh.m4
index 0219ae2fb..3eb1ac6fc 100644
--- a/aczsh.m4
+++ b/aczsh.m4
@@ -38,7 +38,7 @@ dnl   This macro does not produce messages as it may be run several times
 dnl   before finding the right type.
 dnl
 
-AC_DEFUN(zsh_64_BIT_TYPE,
+AC_DEFUN([zsh_64_BIT_TYPE],
 [AC_TRY_RUN([
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
@@ -67,7 +67,7 @@ dnl
 dnl Usage: zsh_SHARED_FUNCTION(name[,rettype[,paramtype]])
 dnl
 
-AC_DEFUN(zsh_SHARED_FUNCTION,
+AC_DEFUN([zsh_SHARED_FUNCTION],
 [zsh_SHARED_SYMBOL($1, ifelse([$2], ,[int ],[$2]) $1 [(]ifelse([$3], ,[ ],[$3])[)], $1)])
 
 dnl
@@ -78,7 +78,7 @@ dnl
 dnl Usage: zsh_SHARED_VARIABLE(name[,type])
 dnl
 
-AC_DEFUN(zsh_SHARED_VARIABLE,
+AC_DEFUN([zsh_SHARED_VARIABLE],
 [zsh_SHARED_SYMBOL($1, ifelse([$2], ,[int ],[$2]) $1, [&$1])])
 
 dnl
@@ -94,7 +94,7 @@ dnl Usage: zsh_SHARED_SYMBOL(name,declaration,address)
 dnl Sets zsh_cv_shared_$1 cache variable to yes/no
 dnl
 
-AC_DEFUN(zsh_SHARED_SYMBOL,
+AC_DEFUN([zsh_SHARED_SYMBOL],
 [AC_CACHE_CHECK([if $1 is available in shared libraries],
 zsh_cv_shared_$1,
 [if test "$zsh_cv_func_dlsym_needs_underscore" = yes; then
@@ -184,7 +184,7 @@ dnl zsh_SYS_DYNAMIC_CLASH
 dnl   Check whether symbol name clashes in shared libraries are acceptable.
 dnl
 
-AC_DEFUN(zsh_SYS_DYNAMIC_CLASH,
+AC_DEFUN([zsh_SYS_DYNAMIC_CLASH],
 [AC_CACHE_CHECK([if name clashes in shared objects are OK],
 zsh_cv_sys_dynamic_clash_ok,
 [if test "$zsh_cv_func_dlsym_needs_underscore" = yes; then
@@ -259,7 +259,7 @@ dnl   Check whether symbols in one dynamically loaded library are
 dnl   available to another dynamically loaded library.
 dnl
 
-AC_DEFUN(zsh_SYS_DYNAMIC_GLOBAL,
+AC_DEFUN([zsh_SYS_DYNAMIC_GLOBAL],
 [AC_CACHE_CHECK([for working RTLD_GLOBAL],
 zsh_cv_sys_dynamic_rtld_global,
 [if test "$zsh_cv_func_dlsym_needs_underscore" = yes; then
@@ -329,7 +329,7 @@ dnl   Check whether symbols in the executable are available to dynamically
 dnl   loaded libraries.
 dnl
 
-AC_DEFUN(zsh_SYS_DYNAMIC_EXECSYMS,
+AC_DEFUN([zsh_SYS_DYNAMIC_EXECSYMS],
 [AC_CACHE_CHECK([whether symbols in the executable are available],
 zsh_cv_sys_dynamic_execsyms,
 [if test "$zsh_cv_func_dlsym_needs_underscore" = yes; then
@@ -398,7 +398,7 @@ dnl zsh_SYS_DYNAMIC_STRIP_EXE
 dnl   Check whether it is safe to strip executables.
 dnl
 
-AC_DEFUN(zsh_SYS_DYNAMIC_STRIP_EXE,
+AC_DEFUN([zsh_SYS_DYNAMIC_STRIP_EXE],
 [AC_REQUIRE([zsh_SYS_DYNAMIC_EXECSYMS])
 AC_CACHE_CHECK([whether executables can be stripped],
 zsh_cv_sys_dynamic_strip_exe,
@@ -471,7 +471,7 @@ dnl zsh_SYS_DYNAMIC_STRIP_EXE
 dnl   Check whether it is safe to strip dynamically loaded libraries.
 dnl
 
-AC_DEFUN(zsh_SYS_DYNAMIC_STRIP_LIB,
+AC_DEFUN([zsh_SYS_DYNAMIC_STRIP_LIB],
 [AC_CACHE_CHECK([whether libraries can be stripped],
 zsh_cv_sys_dynamic_strip_lib,
 [if test "$zsh_cv_func_dlsym_needs_underscore" = yes; then
@@ -535,7 +535,7 @@ dnl zsh_PATH_UTMP(filename)
 dnl   Search for a specified utmp-type file.
 dnl
 
-AC_DEFUN(zsh_PATH_UTMP,
+AC_DEFUN([zsh_PATH_UTMP],
 [AC_CACHE_CHECK([for $1 file], [zsh_cv_path_$1],
 [for dir in /etc /usr/etc /var/adm /usr/adm /var/run /var/log ./conftest; do
   zsh_cv_path_$1=${dir}/$1
@@ -556,7 +556,7 @@ dnl zsh_TYPE_EXISTS(#includes, type name)
 dnl   Check whether a specified type exists.
 dnl
 
-AC_DEFUN(zsh_TYPE_EXISTS,
+AC_DEFUN([zsh_TYPE_EXISTS],
 [AC_CACHE_CHECK([for $2], [zsh_cv_type_exists_[]translit($2, [ ], [_])],
 [AC_TRY_COMPILE([$1], [$2 testvar;],
 [zsh_cv_type_exists_[]translit($2, [ ], [_])=yes],
@@ -575,7 +575,7 @@ dnl   Check whether a specified aggregate type exists and contains
 dnl   a specified member.
 dnl
 
-AC_DEFUN(zsh_STRUCT_MEMBER,
+AC_DEFUN([zsh_STRUCT_MEMBER],
 [AC_CACHE_CHECK([for $3 in $2], [zsh_cv_struct_member_[]translit($2, [ ], [_])_$3],
 [AC_TRY_COMPILE([$1], [$2 testvar; testvar.$3;],
 [zsh_cv_struct_member_[]translit($2, [ ], [_])_$3=yes],
@@ -595,7 +595,7 @@ dnl   After processing this macro, the configure script may refer to
 dnl   and $tzsh_name, and @tzsh@ is defined for make substitutions.
 dnl
 
-AC_DEFUN(zsh_ARG_PROGRAM,
+AC_DEFUN([zsh_ARG_PROGRAM],
 [AC_ARG_PROGRAM
 # Un-double any \ or $ (doubled by AC_ARG_PROGRAM).
 cat <<\EOF_SED > conftestsed
@@ -613,7 +613,7 @@ rm -f conftestsed
 AC_SUBST(tzsh)dnl
 ])
 
-AC_DEFUN(zsh_COMPILE_FLAGS,
+AC_DEFUN([zsh_COMPILE_FLAGS],
     [AC_ARG_ENABLE(cppflags,
 	AC_HELP_STRING([--enable-cppflags=...], [specify C preprocessor flags]),
 	if test "$enableval" = "yes"
@@ -669,7 +669,7 @@ AC_DEFUN([zsh_CHECK_SOCKLEN_T],[
 )
 
 dnl Check for limit $1 e.g. RLIMIT_RSS.
-AC_DEFUN(zsh_LIMIT_PRESENT,
+AC_DEFUN([zsh_LIMIT_PRESENT],
 [AH_TEMPLATE([HAVE_]$1,
 [Define to 1 if ]$1[ is present (whether or not as a macro).])
 AC_CACHE_CHECK([for limit $1],
